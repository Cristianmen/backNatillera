

service: natillera

custom: 
  tableName: 'users-table-${self:provider.stage}'
  activityName: 'activity-table-${self:provider.stage}'
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: "dev"
  iamRoleStatements:
    - Effect: "Allow"
      Action:        
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem 
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem

      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn"]}
        - { "Fn::GetAtt": ["ActivityDynamoDBTable", "Arn"]}
        

# you can define service wide environment variables here
  environment:
    USERS_TABLE: ${self:custom.tableName}
    ACTIVITY_TABLE: ${self:custom.activityName}

# you can add packaging information here
#package:
#  patterns:
#    - '!exclude-me.js'
#    - '!exclude-me-dir/**'
#    - include-me.js
#    - include-me-dir/**

functions:
  app:
    handler: index.generic
    events:
      - http: ANY /
      - http: ANY {proxy+}
#    

# you can add CloudFormation resource templates here
resources:
  Resources:
    UsersDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    ActivityDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.activityName}
        AttributeDefinitions:
          - AttributeName: activityId
            AttributeType: S
        KeySchema:
          - AttributeName: activityId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1